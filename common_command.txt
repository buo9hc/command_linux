Create enviroment:
	source layers/oe-core/buildtools/environment-setup-x86_64-pokysdk-linux
	source oe-init-build-env
Build 1st time:
	bitbake wrlinux-image-std
	bitbake delta-image-am654idk
	bitbake <name>
Build module:
	bitbake virtual/kernel -c cleansstate -f (if build at next time)
	bitbake virtual/kernel
List build state:
	bitbake iproute2 -c listtasks -f
Build next time:
	Build with custom directly in /build source:
		bitbake virtual/kernel -c do_compile -f
		bitbake wrlinux-image-std
	Build with customize is applide through patch file:
		In Docker: /build/tmp-glibc/work-shared/delta-am62xx/kernel-source		
			Create patch file: git format-patch -1
		Copy patch to /layers/meta-ti-am62xx/recipes-kernel/linux/files/
		Append patch-file into recipes-kernel/linux/files/<driver-name>.scc file:
			ex: delta-am62x-patch.scc
		Create patch file for Layer: 
			cd /layers/meta-ti-am62xx
			git add recipes-kernel/linux/files/delta-am62x.cfg recipes-kernel/linux/files/ti-am62x-patch.scc recipes-kernel/linux/files/0001-TPM-IC-SLB9673AU.patch
			Commit and generate patch: 
				git format-patch -1
		Clean source and build:
			bitbake <Image-name> -c cleansstate -f
		        bitbake <Image-name>
	Buid Uboot: 
		bitbake u-boot -c compile -f; bitbake u-boot
Flash Image:
	lsblk
	umount /dev/sdb*
	sudo mkfs.vfat /dev/sdb -I
	cd to build/tmp-glibc/deploy/images/delta-am62xx
		sudo dd if=wrlinux-image-std-ti-am62xx.wic of=/dev/sdb bs=1M
Debuging:
	sudo gtkterm
	select port
	
Automatically generate recipes:
	Docker: Run source command to initial environment
		source oe-init-build-env
		devtool add "npm://registry.npmjs.org;package=asap;version=2.0.6"
	Modify file .bb flowing template: 
		SUMMARY = "Append Fields append the fields of one small input (Source) to every record of another larger input (Target)"
		DESCRIPTION = "APPENDFIELD"
		HOMEPAGE = "https://github.com/LinusU/node-append-field#readme"
		LICENSE = "MIT"
		LIC_FILES_CHKSUM = "file://LICENSE;md5=ef0c58b6c734404212fa1b16d54f5635"

		inherit npm

		SRC_URI = " \
		    npm://registry.npmjs.org/;package=${BPN};version=${PV} \
		    "
		NPM_SHRINKWRAP := "${THISDIR}/${PN}/npm-shrinkwrap.json"

		S = "${WORKDIR}/npm"
	Coppy folder flowing structure:
		In directory: /A0016-qemuarm64/layers/meta-ti-am62xx/recipes-nodejs
			recipes-nodejs/
			└── append-field
			    ├── append-field
			    │   └── npm-shrinkwrap.json
			    └── append-field_2.0.0.bb
			    
			    
			    
Find file by name:
	find . -iname "tispl.bin"


Create ext4 file:
	cd <path-ti-psdk>/filesystem
	dd if=/dev/null of=tisdk-base.ext4 bs=1M seek=300
	mkfs.ext4 -F tisdk-base.ext4
	mkdir mnt_fs
	sudo mount -t ext4 tisdk-base.ext4 mnt_fs
	cd mnt_fs
	sudo tar xvf ../tisdk-base-image-am62xx-evm.tar.xz
	cd ..
	sudo umount mnt_fs
Mount disk partition
	sudo mount -t ext4 /dev/sdb1 disk
	
Switch between multipe tool version
	Create alternative compiler version list (Ex:)
		sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 8
		sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 8
		sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 9
		sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 9
	
	sudo update-alternatives --config gcc
Install python10 version:
    # Setup
    sudo apt update && sudo apt upgrade -y
    sudo apt install software-properties-common -y
    sudo add-apt-repository ppa:deadsnakes/ppa -y

    # Python 3.11
    sudo apt install python3.11
    sudo apt install python3.11-dev
    sudo apt install python3.11-distutils
    sudo apt install python3.11-venv

    # Pip
    curl -sS https://bootstrap.pypa.io/get-pip.py | python3.11
    echo 'export PATH=/home/${USER}/.local/bin:$PATH' >> ~/.profile
    source ~/.profile
    pip install --upgrade pip

Switch python version
	sudo update-alternatives --install /usr/bin/python python /usr/bin/python2.7 1 
	sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.10 2 
	sudo update-alternatives --config python 

Fix docker error: client version 1.22 is too old. Minimum supported API version is 1.24, please upgrade your client to a newer version
    docker-compose.yml
        version: '2.1'services:
Copy screenshot to clipboard
    sh -c "gnome-screenshot -a --file=temp_screenshot.png; wl-copy < temp_screenshot.png; mv temp_screenshot.png $HOME/Pictures/Screenshots/screenshot.$(date +%Y%m%d_%H%M%S).png"

SSH to server:
    ssh bhoang@10.100.10.3
    password: 123456

U-boot set-boot part:
    setenv mmcdev 0
    setenv bootpart 0

Read file form u-boot:
    ext4load mmc 1:6 0x82000000 detect_log
    setexpr.b detect *0x82000000
    printenv detect
 
Disable metadata checksum:
    sudo tune2fs -O ^metadata_csum /dev/sdb6
        
Write file form u-boot:    
    mw.b 0x82000000 30
    ext4write mmc 1:6 0x82000000 /detect_log 1
    
Which config will be use:
    layers/ti-am65x/conf/machine/ti-am65x.inc:UBOOT_MACHINE = "am65x_evm_a53_defconfig"    
    
Template to add file to recipes source: 
    diff --git a/recipes-bsp/u-boot/u-boot-ti-staging_%.bbappend b/recipes-bsp/u-boot/u-boot-ti-staging_%.bbappend
    new file mode 100755
    index 0000000..7d24e08
    --- /dev/null
    +++ b/recipes-bsp/u-boot/u-boot-ti-staging_%.bbappend
    @@ -0,0 +1,5 @@
    +FILESEXTRAPATHS:prepend := "${THISDIR}/u-boot:"
    +
    +SRC_URI:append:ti-am62xx = "\
    +    file://A0034-enable-spl-mmc-tiny-workaround.cfg \
    +"
    diff --git a/recipes-bsp/u-boot/u-boot/A0034-enable-spl-mmc-tiny-workaround.cfg b/recipes-bsp/u-boot/u-boot/A0034-enable-spl-mmc-tiny-workaround.cfg
    new file mode 100755
    index 0000000..5d9fc75
    --- /dev/null
    +++ b/recipes-bsp/u-boot/u-boot/A0034-enable-spl-mmc-tiny-workaround.cfg
    @@ -0,0 +1,8 @@
    +# CONFIG_MMC_UHS_SUPPORT is not set
    +# CONFIG_SPL_MMC_UHS_SUPPORT is not set
    +# CONFIG_MMC_HS200_SUPPORT is not set
    +# CONFIG_SPL_MMC_HS200_SUPPORT is not set
    +
    +CONFIG_IDENT_STRING="MMC-WORKAROUND"
    +CONFIG_SPL_MMC_TINY=y

Modify a specific commit:
    git rebase --interactive bbc643cd~
    git commit --all --amend --no-edit
    git rebase --continue

Read xml file
    chromium-browser --allow-file-access-from-files test_result.xml
    
    youtube.com##+js(json-prune, endscreen) 
    www.youtube.com##.ytp-ce-element
    www.youtube.com##.ytp-cards-teaser
Tar compress file:
    tar -czvf logs_archive.tar.gz
Tar extract:
    pbzip2 -d my_file.bz2    























